{
  "id": "6fb30eb3-54cb-40ea-a95e-5b8adb10f939",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.palette_inputs": {
      "name": "palette_inputs",
      "schema": "",
      "columns": {
        "paletteVersionId": {
          "name": "paletteVersionId",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "idx": {
          "name": "idx",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "input_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "palette_inputs_paletteVersionId_palette_versions_id_fk": {
          "name": "palette_inputs_paletteVersionId_palette_versions_id_fk",
          "tableFrom": "palette_inputs",
          "tableTo": "palette_versions",
          "columnsFrom": [
            "paletteVersionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view palette inputs for accessible palette versions": {
          "name": "Users can view palette inputs for accessible palette versions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"palette_inputs\".\"paletteVersionId\"\n        AND (p.\"userId\" = (auth.jwt()->>'sub') OR p.visibility IN ('public', 'unlisted'))\n      )"
        },
        "Anonymous users can view palette inputs for public projects": {
          "name": "Anonymous users can view palette inputs for public projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"palette_inputs\".\"paletteVersionId\"\n        AND p.visibility = 'public'\n      )"
        },
        "Users can insert palette inputs for their own projects": {
          "name": "Users can insert palette inputs for their own projects",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"palette_inputs\".\"paletteVersionId\"\n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.palette_versions": {
      "name": "palette_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "projectId": {
          "name": "projectId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "tokensJson": {
          "name": "tokensJson",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "changelog": {
          "name": "changelog",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "palette_versions_projectId_projects_id_fk": {
          "name": "palette_versions_projectId_projects_id_fk",
          "tableFrom": "palette_versions",
          "tableTo": "projects",
          "columnsFrom": [
            "projectId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view palette versions for their projects or public projects": {
          "name": "Users can view palette versions for their projects or public projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"palette_versions\".\"projectId\" \n        AND (p.\"userId\" = (auth.jwt()->>'sub') OR p.visibility IN ('public', 'unlisted'))\n      )"
        },
        "Anonymous users can view palette versions for public projects": {
          "name": "Anonymous users can view palette versions for public projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"palette_versions\".\"projectId\" \n        AND p.visibility = 'public'\n      )"
        },
        "Users can insert palette versions for their own projects": {
          "name": "Users can insert palette versions for their own projects",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"palette_versions\".\"projectId\" \n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.project_shares": {
      "name": "project_shares",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "projectId": {
          "name": "projectId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tokenHash": {
          "name": "tokenHash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "permission": {
          "name": "permission",
          "type": "vis",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'unlisted'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "project_shares_projectId_projects_id_fk": {
          "name": "project_shares_projectId_projects_id_fk",
          "tableFrom": "project_shares",
          "tableTo": "projects",
          "columnsFrom": [
            "projectId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "project_shares_tokenHash_unique": {
          "name": "project_shares_tokenHash_unique",
          "nullsNotDistinct": false,
          "columns": [
            "tokenHash"
          ]
        }
      },
      "policies": {
        "Users can manage shares for their own projects": {
          "name": "Users can manage shares for their own projects",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"project_shares\".\"projectId\" \n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"project_shares\".\"projectId\" \n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.project_stars": {
      "name": "project_stars",
      "schema": "",
      "columns": {
        "projectId": {
          "name": "projectId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "starredAt": {
          "name": "starredAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "project_stars_projectId_projects_id_fk": {
          "name": "project_stars_projectId_projects_id_fk",
          "tableFrom": "project_stars",
          "tableTo": "projects",
          "columnsFrom": [
            "projectId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can manage their own stars": {
          "name": "Users can manage their own stars",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "\"project_stars\".\"userId\" = (auth.jwt()->>'sub')",
          "withCheck": "\"project_stars\".\"userId\" = (auth.jwt()->>'sub')"
        },
        "Anyone can view stars for accessible projects": {
          "name": "Anyone can view stars for accessible projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon",
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"projects\" p \n        WHERE p.id = \"project_stars\".\"projectId\" \n        AND p.visibility IN ('public', 'unlisted')\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.projects": {
      "name": "projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "visibility": {
          "name": "visibility",
          "type": "vis",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'private'"
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "projects_name_unique": {
          "name": "projects_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Public projects are viewable by anyone": {
          "name": "Public projects are viewable by anyone",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "\"projects\".\"visibility\" = 'public'"
        },
        "Users can view their own projects or public projects": {
          "name": "Users can view their own projects or public projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "\"projects\".\"userId\" = (auth.jwt()->>'sub') OR \"projects\".\"visibility\" IN ('public', 'unlisted')"
        },
        "Users can insert only their own projects": {
          "name": "Users can insert only their own projects",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "\"projects\".\"userId\" = (auth.jwt()->>'sub')"
        },
        "Users can update only their own projects": {
          "name": "Users can update only their own projects",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "\"projects\".\"userId\" = (auth.jwt()->>'sub')",
          "withCheck": "\"projects\".\"userId\" = (auth.jwt()->>'sub')"
        },
        "Users can delete only their own projects": {
          "name": "Users can delete only their own projects",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "\"projects\".\"userId\" = (auth.jwt()->>'sub')"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.variant_versions": {
      "name": "variant_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "paletteVersionId": {
          "name": "paletteVersionId",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "target": {
          "name": "target",
          "type": "editor_target",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "specJson": {
          "name": "specJson",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "triggerRunId": {
          "name": "triggerRunId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "variant_versions_paletteVersionId_palette_versions_id_fk": {
          "name": "variant_versions_paletteVersionId_palette_versions_id_fk",
          "tableFrom": "variant_versions",
          "tableTo": "palette_versions",
          "columnsFrom": [
            "paletteVersionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "variant_versions_triggerRunId_unique": {
          "name": "variant_versions_triggerRunId_unique",
          "nullsNotDistinct": false,
          "columns": [
            "triggerRunId"
          ]
        }
      },
      "policies": {
        "Users can view variant versions for accessible palette versions": {
          "name": "Users can view variant versions for accessible palette versions",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"variant_versions\".\"paletteVersionId\"\n        AND (p.\"userId\" = (auth.jwt()->>'sub') OR p.visibility IN ('public', 'unlisted'))\n      )"
        },
        "Anonymous users can view variant versions for public projects": {
          "name": "Anonymous users can view variant versions for public projects",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "anon"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"variant_versions\".\"paletteVersionId\"\n        AND p.visibility = 'public'\n      )"
        },
        "Users can insert/update variant versions for their own projects": {
          "name": "Users can insert/update variant versions for their own projects",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"variant_versions\".\"paletteVersionId\"\n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM \"palette_versions\" pv\n        JOIN \"projects\" p ON p.id = pv.\"projectId\"\n        WHERE pv.id = \"variant_versions\".\"paletteVersionId\"\n        AND p.\"userId\" = (auth.jwt()->>'sub')\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.editor_target": {
      "name": "editor_target",
      "schema": "public",
      "values": [
        "vscode",
        "cursor",
        "zed",
        "vim",
        "shadcn"
      ]
    },
    "public.input_type": {
      "name": "input_type",
      "schema": "public",
      "values": [
        "prompt",
        "image",
        "url",
        "file"
      ]
    },
    "public.vis": {
      "name": "vis",
      "schema": "public",
      "values": [
        "public",
        "private",
        "unlisted"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}