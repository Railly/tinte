generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ThemeLikes {
  xata_id        String   @unique(map: "_pgroll_new_ThemeLikes_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  user           String?
  theme          String?
  Themes         Themes?  @relation(fields: [theme], references: [xata_id], onUpdate: NoAction, map: "theme_link")
  Users          Users?   @relation(fields: [user], references: [xata_id], onUpdate: NoAction, map: "user_link")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ThemePalettes {
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  xata_id        String   @unique(map: "_pgroll_new_ThemePalettes_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  theme          String?
  mode           String?
  text           String?
  text_2         String?
  text_3         String?
  interface      String?
  interface_2    String?
  interface_3    String?
  background     String?
  background_2   String?
  primary        String?
  secondary      String?
  accent         String?
  accent_2       String?
  accent_3       String?
  Themes         Themes?  @relation(fields: [theme], references: [xata_id], onUpdate: NoAction, map: "theme_link")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Themes {
  xata_id        String          @unique(map: "_pgroll_new_Themes_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int             @default(0)
  xata_createdat DateTime        @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime        @default(now()) @db.Timestamptz(6)
  User           String?
  name           String?
  display_name   String?
  is_public      Boolean?        @default(false)
  category       String?         @default("user")
  ThemeLikes     ThemeLikes[]
  ThemePalettes  ThemePalettes[]
  Users          Users?          @relation(fields: [User], references: [xata_id], onUpdate: NoAction, map: "User_link")
  TokenColors    TokenColors[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model TokenColors {
  xata_id                 String   @unique(map: "_pgroll_new_TokenColors_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version            Int      @default(0)
  xata_createdat          DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat          DateTime @default(now()) @db.Timestamptz(6)
  theme                   String?
  plain                   String?  @db.VarChar(20)
  classes                 String?  @db.VarChar(20)
  interfaces              String?  @db.VarChar(20)
  structs                 String?  @db.VarChar(20)
  enums                   String?  @db.VarChar(20)
  keys                    String?  @db.VarChar(20)
  methods                 String?  @db.VarChar(20)
  functions               String?  @db.VarChar(20)
  variables               String?  @db.VarChar(20)
  variables_other         String?  @db.VarChar(20)
  global_variables        String?  @db.VarChar(20)
  local_variables         String?  @db.VarChar(20)
  parameters              String?  @db.VarChar(20)
  properties              String?  @db.VarChar(20)
  strings                 String?  @db.VarChar(20)
  string_escape_sequences String?  @db.VarChar(20)
  keywords                String?  @db.VarChar(20)
  keywords_control        String?  @db.VarChar(20)
  storage_modifiers       String?  @db.VarChar(20)
  comments                String?  @db.VarChar(20)
  doc_comments            String?  @db.VarChar(20)
  numbers                 String?  @db.VarChar(20)
  booleans                String?  @db.VarChar(20)
  operators               String?  @db.VarChar(20)
  macros                  String?  @db.VarChar(20)
  preprocessor            String?  @db.VarChar(20)
  urls                    String?  @db.VarChar(20)
  tags                    String?  @db.VarChar(20)
  jsx_tags                String?  @db.VarChar(20)
  attributes              String?  @db.VarChar(20)
  types                   String?  @db.VarChar(20)
  constants               String?  @db.VarChar(20)
  labels                  String?  @db.VarChar(20)
  namespaces              String?  @db.VarChar(20)
  modules                 String?  @db.VarChar(20)
  type_parameters         String?  @db.VarChar(20)
  exceptions              String?  @db.VarChar(20)
  decorators              String?  @db.VarChar(20)
  calls                   String?  @db.VarChar(20)
  punctuation             String?  @db.VarChar(20)
  Themes                  Themes?  @relation(fields: [theme], references: [xata_id], onUpdate: NoAction, map: "theme_link")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Users {
  xata_id        String       @unique(map: "_pgroll_new_Users_xata_id_key") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int          @default(0)
  xata_createdat DateTime     @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime     @default(now()) @db.Timestamptz(6)
  clerk_id       String?      @unique(map: "Users__pgroll_new_clerk_id_key")
  username       String?      @unique(map: "Users__pgroll_new_username_key")
  ThemeLikes     ThemeLikes[]
  Themes         Themes[]
}
